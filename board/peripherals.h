/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_lpuart.h"
#include "fsl_clock.h"
#include "fsl_adc.h"
#include "fsl_lpspi.h"
#include "fsl_qtmr.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* NVIC interrupt vector ID (number). */
#define ADC1_IRQN ADC1_IRQn
/* NVIC interrupt handler identifier. */
#define ADC1_IRQHANDLER ADC1_IRQHandler
/* Definition of peripheral ID */
#define LPUART1_PERIPHERAL LPUART1
/* Definition of the clock source frequency */
#define LPUART1_CLOCK_SOURCE 80000000UL
/* BOARD_InitPeripherals defines for ADC1 */
/* Definition of peripheral ID */
#define ADC1_PERIPHERAL ADC1
/* Definition of special channel interconnected with ADC_ETC which takes real channel to be measured from ADC_ETC. */
#define ADC1_CHANNEL_DRIVEN_BY_ADC_ETC 16U
/* ADC1 interrupt vector ID (number). */
#define ADC1_IRQN ADC1_IRQn
/* ADC1 interrupt vector priority. */
#define ADC1_IRQ_PRIORITY 0
/* ADC1 interrupt handler identifier. */
#define ADC1_IRQHANDLER ADC1_IRQHandler
/* Channel 0 (IN.0) conversion control group. */
#define ADC1_CH0_CONTROL_GROUP 0U
/* BOARD_InitPeripherals defines for LPSPI4 */
/* Definition of peripheral ID */
#define LPSPI4_PERIPHERAL LPSPI4
/* Definition of clock source */
#define LPSPI4_CLOCK_FREQ 105600000UL
/* Definition of peripheral ID */
#define TMR1_PERIPHERAL TMR1
/* Definition of the timer channel Channel_0. */
#define TMR1_CHANNEL_0_CHANNEL kQTMR_Channel_0
/* Definition of the timer channel Channel_1. */
#define TMR1_CHANNEL_1_CHANNEL kQTMR_Channel_1
/* Definition of the timer channel Channel_0 clock source frequency. */
#define TMR1_CHANNEL_0_CLOCK_SOURCE 62500000UL
/* Definition of the timer channel Channel_1 clock source frequency. */
#define TMR1_CHANNEL_1_CLOCK_SOURCE 62500000UL
/* TMR1 interrupt vector ID (number). */
#define TMR1_IRQN TMR1_IRQn
/* TMR1 interrupt vector priority. */
#define TMR1_IRQ_PRIORITY 0
/* TMR1 interrupt handler identifier. */
#define TMR1_IRQHANDLER TMR1_IRQHandler
/* Definition of peripheral ID */
#define TMR2_PERIPHERAL TMR2
/* Definition of the timer channel Channel_0. */
#define TMR2_CHANNEL_0_CHANNEL kQTMR_Channel_0
/* Definition of the timer channel Channel_0 clock source frequency. */
#define TMR2_CHANNEL_0_CLOCK_SOURCE 62500000UL
/* TMR2 interrupt vector ID (number). */
#define TMR2_IRQN TMR2_IRQn
/* TMR2 interrupt handler identifier. */
#define TMR2_IRQHANDLER TMR2_IRQHandler

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const lpuart_config_t LPUART1_config;
extern const adc_config_t ADC1_config;
extern const adc_channel_config_t ADC1_channels_config[1];
extern const lpspi_master_config_t LPSPI4_config;
extern const qtmr_config_t TMR1_Channel_0_config;
extern const qtmr_config_t TMR1_Channel_1_config;
extern const qtmr_config_t TMR2_Channel_0_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
